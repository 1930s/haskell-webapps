Basic CRUD Operations with models
=================================

Model code-generator
--------------------

Once you've generated your models using :doc:`the migration tool <./migrations>` you'll notice a lot of files getting auto-generated in the ``<projectRoot>/autogen`` directory:

#. For every table that your DB contains you'll have an auto-generated model called ``AutoGenerated.Models.<SingularizedTableNameInCamelCase>``. 
#. For every table that has a primary key called ``id`` (which is a recommended convention), you'll have an auto-generated module called ``AutoGenerated.PrimaryKeys.<ModelName>Id``
#. For every **unique** column name across all your tables, you'll have an auto-generated lens class called ``AutoGenerated.Classes.Has<FieldNameInCamelCase>``

For example, if you have the following two tables in your DB schema:

+------------+----------------------------------+
| users      | contacts                         |
+============+==================================+
| id         | id                               |
+------------+----------------------------------+
| created_at | created_at                       |
+------------+----------------------------------+
| updated_at | updated_at                       |
+------------+----------------------------------+
| email      | email                            |
+------------+----------------------------------+
| password   | first_name                       |
+------------+----------------------------------+
| first_name | last_name                        |
+------------+----------------------------------+
| last_name  | street_address                   |
+------------+----------------------------------+
|            | state                            |
+------------+----------------------------------+
|            | country                          |
+------------+----------------------------------+
|            | zip                              |
+------------+----------------------------------+
|            | **user_id references users(id)** |
+------------+----------------------------------+




Try the following in your REPL:

.. code:: haskell

   createModel 
