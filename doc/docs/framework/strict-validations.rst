Strict model validations
========================

.. code:: haskell

   module Models.User
     (
       module Models.User
     , module Models.User.Types
     , module Autogenerated.Models.User
     ) where

   instance DbModel User where
     strictValidations :: (MonadIO m) => User -> m (Maybe [Error])
     strictValidations user =
       (validateUnique email)
       <> (validateLength (5, 100) name)
       <> (validateFormat (compiledRegex "(.*)@(.*)\.(.*)") email)
       <> (validatePresence name) -- strips the field of whitespace
       <> (if (present $ user ^. firstName)
           then (validatePresence lastName)
           else [])
         

